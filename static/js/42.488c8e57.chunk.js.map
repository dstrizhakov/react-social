{"version":3,"file":"static/js/42.488c8e57.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Posts/Post/Post.module.css?d444","components/Posts/Post/Post.jsx","webpack://my-app/./src/components/Posts/Post.module.css?60aa","webpack://my-app/./src/components/Posts/Posts.module.css?b837","components/Posts/AddNewPostForm/AddNewPostForm.jsx","components/Posts/Posts.jsx","components/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"ProfileInfo_image__5J9ak\",\"info\":\"ProfileInfo_info__P-i7F\",\"statusArea\":\"ProfileInfo_statusArea__rkVyK\",\"status\":\"ProfileInfo_status__H9X2x\",\"avatar\":\"ProfileInfo_avatar__Jmx-P\",\"data\":\"ProfileInfo_data__ggGfo\",\"name\":\"ProfileInfo_name__zgEhi\",\"contacts\":\"ProfileInfo_contacts__W1Lcj\"};","import React, {useEffect, useState} from 'react';\r\nimport style from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [status, setStatus] = useState(props.status);\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        props.updateStatus(status);\r\n        setEditMode(false);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <div className={style.status}>\r\n        {!editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateEditMode}>{status || \"No status\"}</span>\r\n        </div>\r\n        }\r\n        {editMode &&\r\n        <div>\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                   value={status}/>\r\n        </div>\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/img/user.png\";\r\nimport ProfileStatus from \"./ProfileStatusWithHooks\"\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length){\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div className={style.data}>\r\n                <div className={style.statusArea}>\r\n\r\n                    <div className={style.avatar}>\r\n                        <img src={profile.photos.large || userPhoto} alt=\"user photo\"/>\r\n                    </div>\r\n                    { isOwner && <input type = {\"file\"}  onChange={onMainPhotoSelected} />}\r\n                    <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n\r\n\r\n                <div className={style.info}>\r\n                    <div className={style.name}>\r\n                        {profile.fullName}\r\n                    </div>\r\n\r\n                    <div className={style.city}>\r\n                        {profile.aboutMe}\r\n                    </div>\r\n                    <div>\r\n                        {profile.lookingForAJob ? 'Ищет работу: ' : 'Не ищет работу: '}\r\n                        {profile.lookingForAJobDescription ? profile.lookingForAJobDescription : '-'}\r\n                    </div>\r\n\r\n                    <div className={style.contacts}>\r\n                        <div>Контакты:</div>\r\n                        <a href={profile.contacts.facebook}>{profile.contacts.facebook}</a>\r\n                        <a href={profile.contacts.website}>{profile.contacts.website}</a>\r\n                        <a href={profile.contacts.vk}>{profile.contacts.vk}</a>\r\n                        <a href={profile.contacts.twitter}>{profile.contacts.twitter}</a>\r\n                        <a href={profile.contacts.instagram}>{profile.contacts.instagram}</a>\r\n                        <a href={profile.contacts.youtube}>{profile.contacts.youtube}</a>\r\n                        <a href={profile.contacts.github}>{profile.contacts.github}</a>\r\n                        <a href={profile.contacts.mainLink}>{profile.contacts.mainLink}</a>\r\n                        {/*<span>{props.profile.contacts.facebook ? props.profile.contacts.facebook : null}</span>\r\n                        <span>{props.profile.contacts.website ? props.profile.contacts.website : null}</span>\r\n                        <span>{props.profile.contacts.vk ? props.profile.contacts.vk : null}</span>\r\n                        <span>{props.profile.contacts.twitter ? props.profile.contacts.twitter : null}</span>\r\n                        <span>{props.profile.contacts.instagram ? props.profile.contacts.instagram : null}</span>\r\n                        <span>{props.profile.contacts.youtube ? props.profile.contacts.youtube : null}</span>\r\n                        <span>{props.profile.contacts.github ? props.profile.contacts.github : null}</span>\r\n                        <span>{props.profile.contacts.mainLink ? props.profile.contacts.mainLink : null}</span>*/}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__64-Vj\",\"actions\":\"Post_actions__UlnxO\",\"posts\":\"Post_posts__X81DA\",\"postwall\":\"Post_postwall__EUPXH\",\"input\":\"Post_input__jq0pl\"};","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={style.item}>\r\n\t\t\t<img src=\"https://android-obzor.com/wp-content/uploads/2022/02/5-1.jpg\" alt=\"\"></img>\r\n\t\t\t{ props.message }\r\n\t\t\t<div className={style.actions}><span>like </span><span>{ props.likeCount }</span></div>\r\n\t\t</div>\r\n\r\n\r\n\t);\r\n}\r\n\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__+FB2l\",\"actions\":\"Post_actions__SmkQP\",\"posts\":\"Post_posts__z91Hw\",\"postwall\":\"Post_postwall__8nH9V\",\"input\":\"Post_input__i-4gY\"};","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__RZNN+\",\"postwall\":\"Posts_postwall__RRS-J\",\"input\":\"Posts_input__tMPE+\"};","import React from 'react';\r\nimport style from '../Posts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLenghtCreator, required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst maxLenght10 = maxLenghtCreator(10);\r\nlet AddNewPostForm = (props) => {\r\n    return <form className={style.input} onSubmit={props.handleSubmit}>\r\n        <Field name=\"newPostText\" component={Textarea} validate={[required, maxLenght10]}/>\r\n        <button>Add post</button>\r\n    </form>\r\n}\r\nexport default reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport style from './Post.module.css';\r\nimport AddNewPostForm from \"./AddNewPostForm/AddNewPostForm\";\r\n\r\nconst Posts = (props) => {\r\n    let postsElement = [...props.posts].reverse().map(p => <Post message={p.message} key={p.id} likeCount={p.likeCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={style.posts}>\r\n            <h3>My posts:</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={style.postwall}>\r\n                {postsElement}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Posts;","import {addPostActionCreator} from \"../../redux/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"../Posts/PostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto} isOwner={props.isOwner} profile = {props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <PostsContainer/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {Route, Routes, useMatch} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n    //const params = useParams();\r\n    let match = useMatch(\"/profile/:userId\");\r\n    return (\r\n        <WrappedComponent\r\n            {...props}\r\n            //params={params}\r\n            match={match}\r\n        />\r\n    );\r\n};\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (userId === \":userId\") {\r\n            userId = this.props.autorizedUserId\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={this.props.match.params.userId === \":userId\"}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}/>\r\n\r\n                <Routes>\r\n                    <Route path=\":id\" element={<Profile {...this.props} profile={this.props.profile}/>}/>\r\n                </Routes>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n","import {Navigate} from \"react-router\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate replace to=\"/login\" />;\r\n            return <Component{...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","useState","status","setStatus","editMode","setEditMode","useEffect","className","style","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","isOwner","savePhoto","Preloader","src","photos","large","userPhoto","alt","type","target","files","length","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","href","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","message","likeCount","maxLenght10","maxLenghtCreator","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","postsElement","posts","reverse","map","p","id","values","addPost","newPostText","connect","state","profilePage","postsData","dispatch","addPostActionCreator","Posts","ProfileContainer","userId","this","match","params","autorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","path","element","React","compose","auth","isAuth","WrappedComponent","useMatch","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","replace","to"],"sourceRoot":""}