{"version":3,"file":"static/js/254.49d5fd9b.chunk.js","mappings":"gKACA,G,QAA0B,0BAA1B,EAAiE,6BAAjE,EAAuG,wBAAvG,EAAwI,wBAAxI,EAA2K,0BAA3K,EAA+M,yBAA/M,EAAiP,wBAAjP,EAAiR,uB,mBCgBjR,EAZmB,SAACA,GACpB,IAAIC,EAAO,WAAaD,EAAME,GAC7B,OACA,iBAAKC,UAAWC,EAAhB,WACC,gBAAKD,UAAWC,EAAhB,UACC,gBAAKC,IAAKL,EAAMM,OAAQC,IAAI,WAE7B,SAAC,KAAD,CAASC,GAAIP,EAAME,UAAW,qBAAEM,SAAsB,UAAML,GAAiB,IAA7E,SAAkFJ,EAAMU,WCG1F,EAVgB,SAACV,GAEhB,OAEC,gBAAKG,UAAWC,EAAhB,SACEJ,EAAMW,W,sCCHJC,GAAcC,EAAAA,EAAAA,GAAiB,IASrC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAhC,EAPuB,SAACf,GACpB,OAAO,kBAAMG,UAAWC,EAAaY,SAAUhB,EAAMiB,aAA9C,WACH,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUV,KAAK,iBAAiBW,YAAY,qBACvDC,SAAU,CAACC,EAAAA,EAAUX,MAC5B,2CCuBR,EA5BgB,SAACZ,GACb,IAAIwB,EAAQxB,EAAMyB,YACdC,EAAiBF,EAAMG,YAAYC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAYnB,KAAMmB,EAAOnB,KAAsBR,GAAI2B,EAAO3B,GAC9CI,OAAQuB,EAAOvB,QADSuB,EAAO3B,OAE5F4B,EAAkBN,EAAMO,aAAaH,KAAI,SAAAjB,GAAO,OAAI,SAAC,EAAD,CAASA,QAASA,EAAQA,QACjBqB,YAAarB,EAAQqB,aADUrB,EAAQT,OASxG,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKsB,KAEL,gBAAKvB,UAAWC,EAAhB,SACK0B,KAGL,SAAC,EAAD,CAAgBd,SAdJ,SAACiB,GACjBjC,EAAMkC,YAAYD,EAAOE,uB,oBCIjC,GAAeC,E,QAAAA,KACdC,EAAAA,EAAAA,KAfqB,SAACb,GAEtB,MAAO,CACNC,YAAYD,EAAMC,gBAGK,SAACa,GACzB,MAAO,CACNJ,YAAa,SAACC,GACbG,GAASC,EAAAA,EAAAA,GAAmBJ,SAO9BK,EAAAA,EAFD,CAGEC,I,iJCpBEC,EAA6B,SAAClB,GAAD,MAAY,CACzCmB,OAAQnB,EAAMoB,KAAKD,SAGVH,EAAmB,SAACK,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAK/C,MAAM2C,QACT,SAACE,GAAD,UAAcE,KAAK/C,SADK,SAAC,KAAD,CAAUgD,SAAO,EAACxC,GAAG,eAHjB,GACXyC,EAAAA,WAQhC,OADqCZ,EAAAA,EAAAA,IAAQK,EAARL,CAAqCS","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__yeBvv\",\"dialogsItem\":\"Dialogs_dialogsItem__9FM3t\",\"dialog\":\"Dialogs_dialog__ZNQ7Z\",\"active\":\"Dialogs_active__+z89y\",\"messages\":\"Dialogs_messages__RxPWP\",\"message\":\"Dialogs_message__7gUPx\",\"avatar\":\"Dialogs_avatar__K47rI\",\"input\":\"Dialogs_input__-ESZK\"};","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\nlet path = '/dialog/' + props.id;\r\n\treturn (\r\n\t<div className={style.dialog}>\r\n\t\t<div className={style.avatar}>\r\n\t\t\t<img src={props.avatar} alt=\"ava\"/>\r\n\t\t</div>\r\n\t\t<NavLink to={path} className={({isActive}) => isActive ? `${style.active}` : ''}>{props.name}</NavLink>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n\t/*{props.isMyMessage ? console.log (\"My message\") :console.log (\"Another message\") }*/\r\n\treturn(\r\n\r\n\t\t<div className={style.message}>\r\n\t\t\t{props.message}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {maxLenghtCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport style from \"../Dialogs.module.css\";\r\n\r\n\r\nconst maxLenght50 = maxLenghtCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form className={style.input} onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} name=\"newMessageBody\" placeholder=\"Enter your message\"\r\n               validate={[required, maxLenght50]}/>\r\n        <button>Send</button>\r\n    </form>\r\n}\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElement = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}\r\n                                                                     avatar={dialog.avatar}/>);\r\n    let MessagesElement = state.messagesData.map(message => <Message message={message.message} key={message.id}\r\n                                                                     isMyMessage={message.isMyMessage}/>);\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n\r\n    }\r\n    /*if (!props.isAuth) return <Navigate replace to=\"/login\" />;*/\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {MessagesElement}\r\n            </div>\r\n\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dialogs;","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n\treturn {\r\n\t\tdialogsPage:state.dialogsPage\r\n\t}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody)=>{\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody));\r\n\r\n\t\t}\r\n\t}\r\n}\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);\r\n\r\n/*\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\n\r\nexport default DialogsContainer;*/\r\n","import {Navigate} from \"react-router\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate replace to=\"/login\" />;\r\n            return <Component{...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","path","id","className","style","src","avatar","alt","to","isActive","name","message","maxLenght50","maxLenghtCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","state","dialogsPage","dialogsElement","dialogsData","map","dialog","MessagesElement","messagesData","isMyMessage","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","replace","React"],"sourceRoot":""}