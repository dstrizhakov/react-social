{"version":3,"file":"static/js/630.e674a0bc.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Posts/Post/Post.module.css?d444","components/Posts/Post/Post.jsx","webpack://my-app/./src/components/Posts/Post.module.css?60aa","webpack://my-app/./src/components/Posts/Posts.module.css?b837","components/Posts/AddNewPostForm/AddNewPostForm.jsx","components/Posts/Posts.jsx","components/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"ProfileInfo_image__5J9ak\",\"info\":\"ProfileInfo_info__P-i7F\",\"statusArea\":\"ProfileInfo_statusArea__rkVyK\",\"status\":\"ProfileInfo_status__H9X2x\",\"avatar\":\"ProfileInfo_avatar__Jmx-P\",\"data\":\"ProfileInfo_data__ggGfo\",\"name\":\"ProfileInfo_name__zgEhi\",\"contacts\":\"ProfileInfo_contacts__W1Lcj\",\"contact\":\"ProfileInfo_contact__L+iK0\",\"formSummaryError\":\"ProfileInfo_formSummaryError__ecZs5\"};","import React, {useEffect, useState} from 'react';\r\nimport style from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [status, setStatus] = useState(props.status);\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        props.updateStatus(status);\r\n        setEditMode(false);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <div className={style.status}>\r\n        {!editMode &&\r\n        <div>\r\n           <span onDoubleClick={activateEditMode}>{status || \"No status\"}</span>\r\n        </div>\r\n        }\r\n        {editMode &&\r\n        <div>\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                   value={status}/>\r\n        </div>\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import style from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return   <form  onSubmit={()=>{}}>\r\n        <div><button onClick={handleSubmit}>Save</button></div>\r\n            { error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n        <div className={style.name}>\r\n            {createField(\"Full name\", [], \"fullName\", Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>:{createField(\"\", [], \"lookingForAJob\", Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>:{createField(\"My professional skills\", [], \"lookingForAJobDescription\", Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>:{createField(\"About me\", [], \"aboutMe\", Textarea)}\r\n        </div>\r\n            <div className={style.contacts}>\r\n                <div>\r\n                    <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={style.contact}>\r\n                    <b> {key}: {createField(key, [], \"contacts.\" + key, Input)}</b>\r\n                    </div>\r\n                })}\r\n                </div>\r\n            </div>\r\n        </form>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'\r\n}) (ProfileDataForm);\r\n\r\n\r\nexport default ProfileDataFormReduxForm\r\n\r\n","import React, {useState} from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/img/user.png\";\r\nimport ProfileStatus from \"./ProfileStatusWithHooks\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then (\r\n            ()=> {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={style.data}>\r\n                <div className={style.statusArea}>\r\n                    <div className={style.avatar}>\r\n                        <img src={profile.photos.large || userPhoto} alt=\"user photo\"/>\r\n                    </div>\r\n                    {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                    <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} isOwner={isOwner} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={style.info}>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n        <div className={style.name}>\r\n            {profile.fullName}\r\n        </div>\r\n\r\n        <div className={style.city}>\r\n            {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>:{profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n\r\n        <div className={style.contacts}>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={style.contact}><b>{contactTitle}</b>:{contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__64-Vj\",\"actions\":\"Post_actions__UlnxO\",\"posts\":\"Post_posts__X81DA\",\"postwall\":\"Post_postwall__EUPXH\",\"input\":\"Post_input__jq0pl\"};","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={style.item}>\r\n\t\t\t<img src=\"https://android-obzor.com/wp-content/uploads/2022/02/5-1.jpg\" alt=\"\"></img>\r\n\t\t\t{ props.message }\r\n\t\t\t<div className={style.actions}><span>like </span><span>{ props.likeCount }</span></div>\r\n\t\t</div>\r\n\r\n\r\n\t);\r\n}\r\n\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__+FB2l\",\"actions\":\"Post_actions__SmkQP\",\"posts\":\"Post_posts__z91Hw\",\"postwall\":\"Post_postwall__8nH9V\",\"input\":\"Post_input__i-4gY\"};","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__RZNN+\",\"postwall\":\"Posts_postwall__RRS-J\",\"input\":\"Posts_input__tMPE+\"};","import React from 'react';\r\nimport style from '../Posts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLenghtCreator, required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst maxLenght300 = maxLenghtCreator(300);\r\nlet AddNewPostForm = (props) => {\r\n    return <form className={style.input} onSubmit={props.handleSubmit}>\r\n        <Field name=\"newPostText\" component={Textarea} validate={[required, maxLenght300]}/>\r\n        <button>Add post</button>\r\n    </form>\r\n}\r\nexport default reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport style from './Post.module.css';\r\nimport AddNewPostForm from \"./AddNewPostForm/AddNewPostForm\";\r\n\r\nconst Posts = (props) => {\r\n    let postsElement = [...props.posts]\r\n        .reverse()\r\n        .map(p => <Post  message={p.message} key={p.id} likeCount={p.likeCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={style.posts}>\r\n            <h3>My posts:</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={style.postwall}>\r\n                {postsElement}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Posts;","import {addPostActionCreator} from \"../../redux/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"../Posts/PostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile = {props.profile}\r\n                         status={props.status}\r\n                         saveProfile = {props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <PostsContainer/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {Route, Routes, useMatch} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n    //const params = useParams();\r\n    let match = useMatch(\"/profile/:userId\");\r\n    return (\r\n        <WrappedComponent\r\n            {...props}\r\n            //params={params}\r\n            match={match}\r\n        />\r\n    );\r\n};\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (userId === \":userId\") {\r\n            userId = this.props.autorizedUserId\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={this.props.match.params.userId === \":userId\"}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}/>\r\n\r\n                <Routes>\r\n                    <Route path=\":id\" element={<Profile {...this.props} profile={this.props.profile}/>}/>\r\n                </Routes>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n","import {Navigate} from \"react-router\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate replace to=\"/login\" />;\r\n            return <Component{...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","useState","status","setStatus","editMode","setEditMode","useEffect","className","style","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","handleSubmit","profile","error","onSubmit","onClick","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","alt","target","files","length","initialValues","formData","then","message","likeCount","maxLenght300","maxLenghtCreator","Field","name","component","validate","required","postsElement","posts","reverse","p","id","values","addPost","newPostText","connect","state","profilePage","postsData","dispatch","addPostActionCreator","Posts","ProfileContainer","userId","this","match","params","autorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","path","element","React","compose","auth","isAuth","WrappedComponent","useMatch","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","replace","to"],"sourceRoot":""}